Kerr Spacetime Geodesic Generator documentation (WIP)

DEPENDENCIES:

Build:
valac
valadoc
libjson-glib-dev
libgsl0-dev

Run:
vpython
matplotlib
jq
bc
imagemagick
ffmpeg


Sample usage:

1.	Build all the Vala executables, and select one

./build-all [fast]

export LD_LIBRARY_PATH=.
export exe='bin/Release/KerrDeSitter'
export exe='./Simulate'
export exe='./Bh3d.py'
export exe='nc.openbsd pi 1234'


2.	Run tests

./run-tests 2>/dev/null


3.	Edit the inital conditions data and/or the inital conditions file (using particles around black hole as an example)

export icdata=icgen-data.json
export ic=initial-conditions.json
export data=/tmp/data
export pot=/tmp/potential
export icgen=./GenParticle
cp icgenParticle-data.example $icdata

... or for light
export icgen=./GenLight
cp icgenLight-data.example $icdata

vi $icdata; jq . $icdata
$icgen <$icdata >$ic; $icgen <$ic >$pot; ls -lAh $ic $pot
vi $ic; jq . $ic; jq '.IC.lambda, .IC.a, .IC.mu, .IC.E, .IC.L, .IC.Q, .IC.r0, .IC.th0, .IC.step, .IC.start, .IC.end, .IC.plotratio, .IC.cross, .IC.integrator, .IC.stages' <$ic | while read parameter; do echo -n "$parameter "; done >ictest

$exe <$ic | ./plotBH.py `jq .IC.M $ic` `jq .IC.a $ic` `jq .IC.L $ic` `jq .IC.mu $ic` 2>/dev/null &

$exe <$ic | tee $data | ./plotErrors.py `jq .IC.integrator $ic` `jq .IC.stages $ic` `jq .IC.step $ic` tau 1 2>/dev/null &

4.	Some more example pipelines . . .

./rg2 2>/dev/null

export ic=initial-conditions.newton.json
vi $ic; jq . $ic
$exe <$ic | ./plotBH.py 1.0 `jq .IC.Lfac <$ic` 0.0 &

export ic=initial-conditions.pendulum.json
vi $ic; jq . $ic

export ic=initial-conditions.oscillator.json
vi $ic; jq . $ic
$exe <$ic | ./plotOscillator.py 2>/dev/null &

export ic=initial-conditions.henonheiles.json
vi $ic; jq . $ic

echo '{ "rMin": 3.0, "rMax": 12.0, "elevation": 63.0, "spin": 1.0 }' | ./icgenParticle 2>/dev/null | tee $ic | jq .; $exe <$ic| ./plotBH.py `jq .IC.M $ic` `jq .IC.a $ic` `jq .IC.L $ic` `jq .IC.mu $ic`  

params='{ "IC": { "r0": 12.0, "Lfac": 0.8, "start": 0.0, "end": 5000.0, "step": 0.1, "integrator": "sb2", "plotratio": 10 } }'; echo $params | jq .; echo $params | $exe >$data; ./plotErrors.py tau 1 <$data 2>/dev/null & echo $params | $exe | ./plotBH.py 1.0 `echo $params | jq .IC.Lfac` 0.0 2>/dev/null &


5.	Generate geodesic data and pass it to David Madore's kerr-image raytracer (ftp://ftp.madore.org/pub/madore/misc/kerr-image.c).

./icgenParticle <$icdata 2>$pot | $exe | ./raytrace-commands 0 2>/dev/null | ./raytrace


6.	Make a video out of the output files:

ffmpeg -y -i RaytracingOutput/%04d.png -c:v libx264 -crf 1 raytrace.mp4
mplayer raytrace.mp4 -fps 10

ffmpeg -y -i VPythonOutput/%04d.png -c:v libx264 -crf 1 vpython.mp4
ffmpeg -y -i VPythonOutput/%04d.png -c:v libx264 -preset veryslow -qp 0 vpython.mp4


7.	Run a geodesic server from eg. /etc/rc.local:

e.g. on a Raspberry PI:

gsdir='/home/pi/projects/Vala/BlackHole4dVala'
export LD_LIBRARY_PATH=$gsdir
gs='./geodesic-server'
script1='./Simulate'
script2='./Bh3d.py'
su -c "cd $gsdir; $gs 1234 & $gs 1233 & $gs 1232 $script1 & $gs 1231 $script2 &" pi


8.	Update Valadoc:

rsync -av --delete doc ../../m4r35n357.github.io/BlackHole4dVala


REFERENCE DATA


Black Hole model

http://www.icra.it/Publications/Scientific/files/LenseThirring/pdf/b_Wilkins.pdf
http://arxiv.org/abs/gr-qc/0405095


Particle trajectories

http://staff.science.nus.edu.sg/~phylyk/downloads/reports/sp2172_report.pdf


Light trajectories

http://www.physics.nus.edu.sg/~phyteoe/kerr/
http://www.physics.nus.edu.sg/~phyteoe/kerr/paper.pdf


API Documentation (Valadoc)

http://m4r35n357.github.io/BlackHole4dVala/doc/doc/index.htm

