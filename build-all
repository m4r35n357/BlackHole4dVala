#!/bin/sh

opt="${1:-fast}"

C='\033[0;36m'
NC='\033[0m' # No Color

valac="valac -v --save-temps -X -O$opt -X -lm"
valac --version
which valac

valafiles='KdS.vala symplectic.vala models.vala generators.vala json-parser.vala'

# cleanup executables
echo $C"Cleaning Up . . ."$NC
rm -f $outfile TestKdS KdS bh3dRk4 raytrace-commands pendulum \
	kerr-image Simulate GenParticle GenLight Fortran*
rm -f *.h *.vapi
echo ""

# build vala libraries
echo $C"Building Vala Libraries. . ."$NC
$valac --library=json-parser -H json-parser.h json-parser.vala -X -fPIC -X -shared -o json-parser.so --gir jsonparser-0.1.gir --pkg json-glib-1.0
g-ir-compiler --shared-library=json-parser.so --output=json-parser-0.1.typelib jsonparser-0.1.gir
$valac --library=symplectic -H symplectic.h symplectic.vala -X -fPIC -X -shared -o symplectic.so --gir symplectic-0.1.gir
g-ir-compiler --shared-library=symplectic.so --output=symplectic-0.1.typelib symplectic-0.1.gir
echo ""

# compile vala test files
echo $C"Compiling Vala Tests . . ."$NC
$valac --pkg json-glib-1.0 \
	TestKdS.vala models.vala symplectic.vala json-parser.vala
echo ""

# compile vala files
echo $C"Compiling Vala . . ."$NC
#$valac --pkg json-glib-1.0 --pkg gsl $valafiles
$valac symplectic.vapi json-parser.vapi KdS.vala models.vala generators.vala -X symplectic.so -X json-parser.so -X -I. -o KdS --pkg json-glib-1.0 --pkg gsl

echo ""

# compile raytracer
echo $C"Compiling Raytracer . . ."$NC
$valac --pkg json-glib-1.0 raytrace-commands.vala
gcc -o kerr-image kerr-image.c -O$opt -Wall -std=c99 -pedantic -Wextra -Wno-unused-result -lm
echo ""

# compile Fortran
echo $C"Compiling Fortran . . ."$NC
gfortran --version
if [ 'xtrue' = "x$FORTRAN128" ]
then
	echo 'Requesting FORTRAN 128 bit double precision'
	gf='gfortran -Wall -O2 -fimplicit-none -fdefault-real-8'
else
	echo 'Requesting FORTRAN default double precision'
	gf='gfortran -Wall -O2 -fimplicit-none'
fi

if [ 'x.' = "x$LD_LIBRARY_PATH" ]
then
	STATIC=''
else
	STATIC='-static'
fi
rm -f model.mod KdS.o Newton.o Oscillator.o
$gf -c KdS.f90
$gf $STATIC -o FortranKdS Symplectic.f90 KdS.o
rm -f model.mod
$gf -c Newton.f90
$gf $STATIC -o FortranNewton Symplectic.f90 Newton.o
rm -f model.mod
$gf -c Oscillator.f90
$gf $STATIC -o FortranOscillator Symplectic.f90 Oscillator.o
echo ""

# strip executables
echo $C"Stripping Executables . . ."$NC
case $opt in
	fast)	strip KdS raytrace-commands kerr-image;;
esac

ln KdS Simulate
ln KdS GenParticle
ln KdS GenLight
rm -f KdS

# admire our work
ls -lAh --color TestKdS Simulate GenParticle GenLight \
		raytrace-commands kerr-image \
		Fortran*
echo ""
ls -lAh --color *.h *.so *.vapi *.gir *.typelib *.o
echo ""

# generate documentation
echo $C"Generating Documentation . . ."$NC
rm -rf doc
valadoc --private -o doc --pkg json-glib-1.0 --pkg gsl $valafiles
echo ""

# test
echo $C"Running Tests . . ."$NC
./TestKdS >/dev/null && echo ${C}OK${NC}

